<!DOCTYPE html>
<html>
  <head>
    <meta content='text/html; charset=UTF-8' http-equiv='Content-Type' />
  </head>
  <style>
    body, div, form, p, label, input, button{
      margin: 0; padding: 0;
    }
    form, div{
      width: 800px;
      margin: 0 auto;
      padding: 0;
      text-align: center;
    }
    .admonishment{
      margin-top: 10px;
      border-top: #DDD solid 1px;
      padding: 5px;
    }
    #pdf_view_port{
      width: 100vw;
      height: calc(100vh - 200px);
    }
    #acceptForm{
      opacity: 0;
    }
    label{
      padding: 0 10px;
    }
  </style>

  <body>
    <embed id="pdf_view_port" type='application/pdf' name="contract.pdf"/>
    <form id='decision'>
      <p>I hereby accept the Teaching Assistanship position offered here:</p>
      <br/>
      <label><input onchange="showAcceptForm()" name="decision" type="radio" value="accept"/>Accept</label>
      <label><input onchange="showAcceptForm()" name="decision" type="radio" value="reject"/>Reject</label>
      <br/>
      <label id="acceptForm">To accept the contract type your name:
        <input id="signature" type="text" name="signature_name" required="required">
      </label>
      <br/><br/>
      <button type='button' onclick='submitDecision()'>Submit</button>
    </form>
    <div id='status'>
    </div>
    <div class='admonishment'>
      <p><b>Important:</b> In order to arrange payroll, if this is your first DCS TAship or your SIN number has been changed since last TAship, you must see Lisa DeCaro in person during office hours (M-F, 9:30-11, 2-3:30) office SF 3302F.</p>
      <p>If you have questions, please email Lisa DeCaro <a href="mailto:lisab@cs.toronto.edu">lisab@cs.toronto.edu</a>.</p>
    </div>

    <script>
      function setupPage(offer_status, fetch=false){
        if (fetch)
          fetchPdfData();
        let status = document.getElementById('status');
        let decision = document.getElementById('decision');
        if (offer_status == 'pending'){
          status.style.display='none';
          decision.style.display='block';
        }
        else{
          status.style.display='block';
          decision.style.display='none';
          status.innerHTML = `<h2>Status: </h2>
          <p>This offer has been `+offer_status+'.</p>';
        }
      }
      // helper factoring out frequently used code around a fetch
      function fetchHelper(url, init, action, blob=false){
        fetch(url, init).then(function(response) {
          if (blob){
            return response.blob();
          }
          else{
            return response.json();
          }
        }).then(function(response){
            action(response);
        });
      }
      function postHelper(url, data, action, blob=false){
        let init = {
            headers: {
                Accept: 'application/json',
                'Content-Type': 'application/json; charset=utf-8',
            },
            method: 'POST',
            body: JSON.stringify(data)
        };
        fetchHelper(url, init, action, blob);
      }
      function getHelper(url, action, blob=false){
        let init = {
            headers: {
                Accept: 'application/json',
            },
            method: 'GET',
        };
        fetchHelper(url, init, action, blob);
      }
      function fetchPdfData(){
        getHelper("/pb/<%= @offer[:mangled] %>/pdf", setPdfViewPort, true);
      }
      function setPdfViewPort(response){
        let fileURL = URL.createObjectURL(response);
        let viewPort= document.getElementById("pdf_view_port");
        viewPort.setAttribute("src", fileURL);
      }
      function showAcceptForm(){
        let acceptForm= document.getElementById('acceptForm');
        let decision= getDecision();
        if (decision !=null){
          if(decision.value=='accept')
            acceptForm.style.opacity="1";
          else
            acceptForm.style.opacity="0";
        }
      }
      function getDecision(){
        let decision = document.getElementsByName('decision');
        let selected = null;
        decision.forEach(function(item, index){
          if (item.checked)
            selected = item;
        });
        return selected;
      }
      function submitDecision(){
        let decision = getDecision();
        let signature = document.getElementById('signature');
        if (decision != null){
          if(decision.value=='accept'){
            if (signature.value.trim()!=""){
              postStatus(decision.value, signature.value.trim());
            }
            else{
              alert("Error: you haven't signed your name yet.");
            }
          }
          else if (decision.value=='reject'){
            postStatus(decision.value);
          }
        }
        else{
          alert("Error: you haven't chosen whether to accept or reject.")
        }
      }
      function postStatus(status, signature = null){
        let res = confirm("Are you sure you want to "+status+" the TAship for this offer?");
        let data = {}
        if (signature!=null){
          data["signature"] = signature;
        }
        if (res) {
          postHelper("/pb/<%= @offer[:mangled] %>/"+status, data, updateStatus);
        }
      }
      function updateStatus(response){
        fetchPdfData();
        alert(response.message);
        if (response.success){
          setupPage(response.status);
        }
      }
      setupPage('<%= @offer[:status].downcase %>', true);
    </script>
  </body>
</html>
